#include <Servo.h>

// Define the servo motors for each joint
Servo base, shoulder, elbow, wrist1, wrist2, gripper;

// Define the angles for each joint
float theta1, theta2, theta3, theta4, theta5, theta6;

// Define the lengths of each link in the robot arm in cm
float L1 = 10;
float L2 = 10;
float L3 = 10;
float L4 = 10;
float L5 = 10;
float L6 = 10;

// Define the end effector position
float x = 0;
float y = 0;
float z = 0;
int pos1 = 0; 
int pos2 = 0; 
int pos3 = 0; 
int pos4 = 0; 
int pos5 = 0; 
int pos6 = 0; 

void setup() {
  // Attach the servo motors to their respective pins
  base.attach(9);
  shoulder.attach(6);
  elbow.attach(5);
  wrist1.attach(3);
  wrist2.attach(10);
  gripper.attach(11);
  
  // Set the initial position of the servo motors
  //base.write(90);
  //shoulder.write(90);
  //elbow.write(90);
  //wrist1.write(90);
  //wrist2.write(90);
  //gripper.write(0);

  // Initialize serial communication
  Serial.begin(9600);
}

void loop() {
  // Wait for input from the user
  if (Serial.available() > 0) {
    // Read the input from the user
    String input = Serial.readStringUntil('\n');

    // Parse the input into x, y, and z coordinates
    int comma1 = input.indexOf(",");
    int comma2 = input.indexOf(",", comma1+1);
    x = input.substring(0, comma1).toFloat();//Reads the first value entered in the string
    y = input.substring(comma1+1, comma2).toFloat();//Reads the second value entered after the first comma i.e. y co-cordinate
    z = input.substring(comma2+1).toFloat();//Reads final value after the 2nd comma i.e. z co-ordinate

    // Calculate the inverse kinematics
    // Equations are written on paper attached
    float r = sqrt(x*x + y*y);
    float d = sqrt(r*r + (z-L1)*(z-L1));
    theta1 = atan2(y, x);
    theta2 = atan2(z-L1, r) + acos((L3*L3 - L2*L2 - d*d)/(-2*L2*d));
    theta3 = atan2(d*sin(theta2), L2 + d*cos(theta2)) + atan2((z-L1), r);
    theta4 = atan2(-cos(theta2)*sin(theta3), -sin(theta2)) - theta2 - theta3;
    theta5 = atan2(cos(theta2)*cos(theta3)*cos(theta4) - sin(theta2)*sin(theta4), cos(theta4)*sin(theta3));
    theta6 = atan2(sin(theta5)*cos(theta2)*cos(theta3) + sin(theta2)*cos(theta5), cos(theta4));
    
    // Convert the angles to degrees and map them to the servo range
    // Syntax - int baseAngle = map(<angle converted from radian>, <Min value of angle in radian>, <Max value of angle in radian>, <Min value of angle in the servo>, <Max value of angle in the servp>);
    int baseAngle = map(theta1*180/PI, 0, 180, 0, 90);
    int shoulderAngle = map(theta2*180/PI, 0, 180, 0, 90);
    int elbowAngle = map(theta3*180/PI, 0, 180, 0, 90);
    int wrist1Angle = map(theta4*180/PI, 0, 180, 0, 90);
    int wrist2Angle = map(theta5*180/PI, 0, 180, 0, 90);
    int gripperAngle = map(theta6*180/PI, 0, 180, 0 , 0);
	// Write the angles to the servo motors
    //base.write(baseAngle);{
    {
    for (pos1 = 0; pos1 <= baseAngle; pos1 += 1) { // goes from 0 degrees to the angle which we calculated in steps of 1 degree
        base.write(pos1);   
        for (pos2 = 0; pos2 <= shoulderAngle; pos2 += 1) { 
        shoulder.write(pos2);
            for (pos3 = 0; pos3 <= elbowAngle; pos3 += 1) { 
            elbow.write(pos3);
                for (pos4 = 0; pos4 <= wrist1Angle; pos4 += 1) { 
                wrist1.write(pos4); 
                    for (pos5 = 0; pos5 <= wrist2Angle; pos5 += 1) { 
                    wrist2.write(pos5);   
                        for (pos6 = 0; pos6 <= gripperAngle; pos6 += 1) { 
                        gripper.write(pos6); 
        }
        }
        }
        }
        }
      		//Make 6 loops and define 6 positions
               // tell servo to go to position in variable 'pos'
        //for (pos = 0; pos <= shoulderAngle; pos += 1) { // goes from 0 degrees to the angle which we calculated in steps of 1 degree
        //    shoulder.write(pos);              // tell servo to go to position in variable 'pos' 
      delay(50);
    }
//shoulder.write(shoulderAngle);
//elbow.write(elbowAngle);
//wrist1.write(wrist1Angle);
//wrist2.write(wrist2Angle);
//gripper.write(gripperAngle);

// Print the angles to the serial monitor
Serial.print("Base Angle: ");
Serial.print(baseAngle);
Serial.print(" | Shoulder Angle: ");
Serial.print(shoulderAngle);
Serial.print(" | Elbow Angle: ");
Serial.print(elbowAngle);
Serial.print(" | Wrist 1 Angle: ");
Serial.print(wrist1Angle);
Serial.print(" | Wrist 2 Angle: ");
Serial.print(wrist2Angle);
Serial.print(" | Gripper Angle: ");
Serial.println(gripperAngle);
}
}
}

